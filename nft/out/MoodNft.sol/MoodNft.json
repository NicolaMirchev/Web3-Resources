{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "sadSvg",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "happySvg",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MoodNft__CantFlipMoonIfNotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "flipMood",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001a6038038062001a60833981016040819052620000349162000185565b60405180604001604052806008815260200167135bdbd90813919560c21b8152506040518060400160405280600281526020016126a760f11b81525081600090816200008191906200027e565b5060016200009082826200027e565b5060079150620000a3905083826200027e565b506008620000b282826200027e565b50506000600655506200034a565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000e857600080fd5b81516001600160401b0380821115620001055762000105620000c0565b604051601f8301601f19908116603f01168101908282118183101715620001305762000130620000c0565b816040528381526020925086838588010111156200014d57600080fd5b600091505b8382101562000171578582018301518183018401529082019062000152565b600093810190920192909252949350505050565b600080604083850312156200019957600080fd5b82516001600160401b0380821115620001b157600080fd5b620001bf86838701620000d6565b93506020850151915080821115620001d657600080fd5b50620001e585828601620000d6565b9150509250929050565b600181811c908216806200020457607f821691505b6020821081036200022557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027957600081815260208120601f850160051c81016020861015620002545750805b601f850160051c820191505b81811015620002755782815560010162000260565b5050505b505050565b81516001600160401b038111156200029a576200029a620000c0565b620002b281620002ab8454620001ef565b846200022b565b602080601f831160018114620002ea5760008415620002d15750858301515b600019600386901b1c1916600185901b17855562000275565b600085815260208120601f198616915b828110156200031b57888601518255948401946001909101908401620002fa565b50858210156200033a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611706806200035a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c1a147a011610066578063c1a147a0146101ff578063c2229fea14610212578063c87b56dd1461021a578063e985e9c51461022d57600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063b88d4fde146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d6101083660046110a2565b610240565b60405190151581526020015b60405180910390f35b61012a610292565b6040516101199190611116565b61014a610145366004611129565b610324565b6040516001600160a01b039091168152602001610119565b61017561017036600461115e565b61034b565b005b610175610185366004611188565b610465565b610175610198366004611188565b610496565b61014a6101ab366004611129565b6104b1565b6101c36101be3660046111c4565b610511565b604051908152602001610119565b61012a610597565b6101756101e73660046111df565b6105a6565b6101756101fa366004611231565b6105b5565b61017561020d366004611129565b6105ed565b610175610671565b61012a610228366004611129565b6106ab565b61010d61023b36600461130d565b6108a1565b60006001600160e01b031982166380ac58cd60e01b148061027157506001600160e01b03198216635b5e139f60e01b145b8061028c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102a190611340565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90611340565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b5050505050905090565b600061032f826108cf565b506000908152600460205260409020546001600160a01b031690565b6000610356826104b1565b9050806001600160a01b0316836001600160a01b0316036103c85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103e457506103e481336108a1565b6104565760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103bf565b610460838361092e565b505050565b61046f338261099c565b61048b5760405162461bcd60e51b81526004016103bf9061137a565b6104608383836109fb565b610460838383604051806020016040528060008152506105b5565b6000818152600260205260408120546001600160a01b03168061028c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103bf565b60006001600160a01b03821661057b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103bf565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a190611340565b6105b1338383610b5f565b5050565b6105bf338361099c565b6105db5760405162461bcd60e51b81526004016103bf9061137a565b6105e784848484610c2d565b50505050565b6105f7338261099c565b610614576040516319de95c760e01b815260040160405180910390fd5b60008181526009602052604081205460ff166001811115610637576106376113c7565b03610657576000908152600960205260409020805460ff19166001179055565b6000818152600960205260409020805460ff191690555b50565b61067d33600654610c60565b600680546000908152600960205260408120805460ff19169055815491906106a4836113f3565b9190505550565b6060806000808481526009602052604090205460ff1660018111156106d2576106d26113c7565b0361076957600880546106e490611340565b80601f016020809104026020016040519081016040528092919081815260200182805461071090611340565b801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b505050505090506107f7565b6007805461077690611340565b80601f01602080910402602001604051908101604052809291908181526020018280546107a290611340565b80156107ef5780601f106107c4576101008083540402835291602001916107ef565b820191906000526020600020905b8154815290600101906020018083116107d257829003601f168201915b505050505090505b60408051808201909152601d81527f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006020820152610879610836610292565b8360405160200161084892919061140c565b60408051601f198184030181529082905261086591602001611508565b604051602081830303815290604052610c7a565b60405160200161088a929190611524565b604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b031661066e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103bf565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610963826104b1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109a8836104b1565b9050806001600160a01b0316846001600160a01b031614806109cf57506109cf81856108a1565b806109f35750836001600160a01b03166109e884610324565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a0e826104b1565b6001600160a01b031614610a345760405162461bcd60e51b81526004016103bf90611553565b6001600160a01b038216610a965760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103bf565b826001600160a01b0316610aa9826104b1565b6001600160a01b031614610acf5760405162461bcd60e51b81526004016103bf90611553565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610bc05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103bf565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c388484846109fb565b610c4484848484610dcd565b6105e75760405162461bcd60e51b81526004016103bf90611598565b6105b1828260405180602001604052806000815250610ece565b60608151600003610c9957505060408051602081019091526000815290565b60006040518060600160405280604081526020016116916040913990506000600384516002610cc891906115ea565b610cd291906115fd565b610cdd90600461161f565b67ffffffffffffffff811115610cf557610cf561121b565b6040519080825280601f01601f191660200182016040528015610d1f576020820181803683370190505b509050600182016020820185865187015b80821015610d8b576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610d30565b5050600386510660018114610da75760028114610dba57610dc2565b603d6001830353603d6002830353610dc2565b603d60018303535b509195945050505050565b60006001600160a01b0384163b15610ec357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e11903390899088908890600401611636565b6020604051808303816000875af1925050508015610e4c575060408051601f3d908101601f19168201909252610e4991810190611673565b60015b610ea9573d808015610e7a576040519150601f19603f3d011682016040523d82523d6000602084013e610e7f565b606091505b508051600003610ea15760405162461bcd60e51b81526004016103bf90611598565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109f3565b506001949350505050565b610ed88383610f01565b610ee56000848484610dcd565b6104605760405162461bcd60e51b81526004016103bf90611598565b6001600160a01b038216610f575760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103bf565b6000818152600260205260409020546001600160a01b031615610fbc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103bf565b6000818152600260205260409020546001600160a01b0316156110215760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103bf565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461066e57600080fd5b6000602082840312156110b457600080fd5b81356110bf8161108c565b9392505050565b60005b838110156110e15781810151838201526020016110c9565b50506000910152565b600081518084526111028160208601602086016110c6565b601f01601f19169290920160200192915050565b6020815260006110bf60208301846110ea565b60006020828403121561113b57600080fd5b5035919050565b80356001600160a01b038116811461115957600080fd5b919050565b6000806040838503121561117157600080fd5b61117a83611142565b946020939093013593505050565b60008060006060848603121561119d57600080fd5b6111a684611142565b92506111b460208501611142565b9150604084013590509250925092565b6000602082840312156111d657600080fd5b6110bf82611142565b600080604083850312156111f257600080fd5b6111fb83611142565b91506020830135801515811461121057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561124757600080fd5b61125085611142565b935061125e60208601611142565b925060408501359150606085013567ffffffffffffffff8082111561128257600080fd5b818701915087601f83011261129657600080fd5b8135818111156112a8576112a861121b565b604051601f8201601f19908116603f011681019083821181831017156112d0576112d061121b565b816040528281528a60208487010111156112e957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561132057600080fd5b61132983611142565b915061133760208401611142565b90509250929050565b600181811c9082168061135457607f821691505b60208210810361137457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611405576114056113dd565b5060010190565b693d913730b6b2911d101160b11b8152825160009061143281600a8501602088016110c6565b7f222c20226465736372697074696f6e22203a2022416e204e4654207468617420600a918401918201527f7265666c6563747320746865206f776e657273206d6f6f642e22202c20226174602a8201527f7472696275746573223a205b7b2274726169745f74797065223a20226d6f6f64604a8201527f696e657373222c202276616c756522203a203130307d5d2c2022696d61676522606a820152621d101160e91b608a82015283516114ed81608d8401602088016110c6565b61227d60f01b608d9290910191820152608f01949350505050565b6000825161151a8184602087016110c6565b9190910192915050565b600083516115368184602088016110c6565b83519083019061154a8183602088016110c6565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8082018082111561028c5761028c6113dd565b60008261161a57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761028c5761028c6113dd565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611669908301846110ea565b9695505050505050565b60006020828403121561168557600080fd5b81516110bf8161108c56fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220ad1c7c7f7ede0bab2b10e1a98344b39439a6484257ddea10901dc978b3453c1064736f6c63430008130033",
    "sourceMap": "215:1761:33:-:0;;;511:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:18;;;;;;;;;;;;;-1:-1:-1;;;1390:113:18;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:18;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:18;:17;1489:7;1479;:17;:::i;:::-;-1:-1:-1;602:16:33::1;::::0;-1:-1:-1;602:25:33::1;::::0;-1:-1:-1;621:6:33;602:16;:25:::1;:::i;:::-;-1:-1:-1::0;637:18:33::1;:29;658:8:::0;637:18;:29:::1;:::i;:::-;-1:-1:-1::0;;693:1:33::1;676:14;:18:::0;-1:-1:-1;215:1761:33;;14:127:36;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:36;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:36;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:36:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:36;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:36;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:36;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:36;;;3992:26;3943:89;-1:-1:-1;;2747:1:36;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:36;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:36;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:36;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:36:o;:::-;215:1761:33;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c1a147a011610066578063c1a147a0146101ff578063c2229fea14610212578063c87b56dd1461021a578063e985e9c51461022d57600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063b88d4fde146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d6101083660046110a2565b610240565b60405190151581526020015b60405180910390f35b61012a610292565b6040516101199190611116565b61014a610145366004611129565b610324565b6040516001600160a01b039091168152602001610119565b61017561017036600461115e565b61034b565b005b610175610185366004611188565b610465565b610175610198366004611188565b610496565b61014a6101ab366004611129565b6104b1565b6101c36101be3660046111c4565b610511565b604051908152602001610119565b61012a610597565b6101756101e73660046111df565b6105a6565b6101756101fa366004611231565b6105b5565b61017561020d366004611129565b6105ed565b610175610671565b61012a610228366004611129565b6106ab565b61010d61023b36600461130d565b6108a1565b60006001600160e01b031982166380ac58cd60e01b148061027157506001600160e01b03198216635b5e139f60e01b145b8061028c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102a190611340565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90611340565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b5050505050905090565b600061032f826108cf565b506000908152600460205260409020546001600160a01b031690565b6000610356826104b1565b9050806001600160a01b0316836001600160a01b0316036103c85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103e457506103e481336108a1565b6104565760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103bf565b610460838361092e565b505050565b61046f338261099c565b61048b5760405162461bcd60e51b81526004016103bf9061137a565b6104608383836109fb565b610460838383604051806020016040528060008152506105b5565b6000818152600260205260408120546001600160a01b03168061028c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103bf565b60006001600160a01b03821661057b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103bf565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a190611340565b6105b1338383610b5f565b5050565b6105bf338361099c565b6105db5760405162461bcd60e51b81526004016103bf9061137a565b6105e784848484610c2d565b50505050565b6105f7338261099c565b610614576040516319de95c760e01b815260040160405180910390fd5b60008181526009602052604081205460ff166001811115610637576106376113c7565b03610657576000908152600960205260409020805460ff19166001179055565b6000818152600960205260409020805460ff191690555b50565b61067d33600654610c60565b600680546000908152600960205260408120805460ff19169055815491906106a4836113f3565b9190505550565b6060806000808481526009602052604090205460ff1660018111156106d2576106d26113c7565b0361076957600880546106e490611340565b80601f016020809104026020016040519081016040528092919081815260200182805461071090611340565b801561075d5780601f106107325761010080835404028352916020019161075d565b820191906000526020600020905b81548152906001019060200180831161074057829003601f168201915b505050505090506107f7565b6007805461077690611340565b80601f01602080910402602001604051908101604052809291908181526020018280546107a290611340565b80156107ef5780601f106107c4576101008083540402835291602001916107ef565b820191906000526020600020905b8154815290600101906020018083116107d257829003601f168201915b505050505090505b60408051808201909152601d81527f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006020820152610879610836610292565b8360405160200161084892919061140c565b60408051601f198184030181529082905261086591602001611508565b604051602081830303815290604052610c7a565b60405160200161088a929190611524565b604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b031661066e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103bf565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610963826104b1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109a8836104b1565b9050806001600160a01b0316846001600160a01b031614806109cf57506109cf81856108a1565b806109f35750836001600160a01b03166109e884610324565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a0e826104b1565b6001600160a01b031614610a345760405162461bcd60e51b81526004016103bf90611553565b6001600160a01b038216610a965760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103bf565b826001600160a01b0316610aa9826104b1565b6001600160a01b031614610acf5760405162461bcd60e51b81526004016103bf90611553565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610bc05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103bf565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c388484846109fb565b610c4484848484610dcd565b6105e75760405162461bcd60e51b81526004016103bf90611598565b6105b1828260405180602001604052806000815250610ece565b60608151600003610c9957505060408051602081019091526000815290565b60006040518060600160405280604081526020016116916040913990506000600384516002610cc891906115ea565b610cd291906115fd565b610cdd90600461161f565b67ffffffffffffffff811115610cf557610cf561121b565b6040519080825280601f01601f191660200182016040528015610d1f576020820181803683370190505b509050600182016020820185865187015b80821015610d8b576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610d30565b5050600386510660018114610da75760028114610dba57610dc2565b603d6001830353603d6002830353610dc2565b603d60018303535b509195945050505050565b60006001600160a01b0384163b15610ec357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e11903390899088908890600401611636565b6020604051808303816000875af1925050508015610e4c575060408051601f3d908101601f19168201909252610e4991810190611673565b60015b610ea9573d808015610e7a576040519150601f19603f3d011682016040523d82523d6000602084013e610e7f565b606091505b508051600003610ea15760405162461bcd60e51b81526004016103bf90611598565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109f3565b506001949350505050565b610ed88383610f01565b610ee56000848484610dcd565b6104605760405162461bcd60e51b81526004016103bf90611598565b6001600160a01b038216610f575760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103bf565b6000818152600260205260409020546001600160a01b031615610fbc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103bf565b6000818152600260205260409020546001600160a01b0316156110215760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103bf565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461066e57600080fd5b6000602082840312156110b457600080fd5b81356110bf8161108c565b9392505050565b60005b838110156110e15781810151838201526020016110c9565b50506000910152565b600081518084526111028160208601602086016110c6565b601f01601f19169290920160200192915050565b6020815260006110bf60208301846110ea565b60006020828403121561113b57600080fd5b5035919050565b80356001600160a01b038116811461115957600080fd5b919050565b6000806040838503121561117157600080fd5b61117a83611142565b946020939093013593505050565b60008060006060848603121561119d57600080fd5b6111a684611142565b92506111b460208501611142565b9150604084013590509250925092565b6000602082840312156111d657600080fd5b6110bf82611142565b600080604083850312156111f257600080fd5b6111fb83611142565b91506020830135801515811461121057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561124757600080fd5b61125085611142565b935061125e60208601611142565b925060408501359150606085013567ffffffffffffffff8082111561128257600080fd5b818701915087601f83011261129657600080fd5b8135818111156112a8576112a861121b565b604051601f8201601f19908116603f011681019083821181831017156112d0576112d061121b565b816040528281528a60208487010111156112e957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561132057600080fd5b61132983611142565b915061133760208401611142565b90509250929050565b600181811c9082168061135457607f821691505b60208210810361137457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611405576114056113dd565b5060010190565b693d913730b6b2911d101160b11b8152825160009061143281600a8501602088016110c6565b7f222c20226465736372697074696f6e22203a2022416e204e4654207468617420600a918401918201527f7265666c6563747320746865206f776e657273206d6f6f642e22202c20226174602a8201527f7472696275746573223a205b7b2274726169745f74797065223a20226d6f6f64604a8201527f696e657373222c202276616c756522203a203130307d5d2c2022696d61676522606a820152621d101160e91b608a82015283516114ed81608d8401602088016110c6565b61227d60f01b608d9290910191820152608f01949350505050565b6000825161151a8184602087016110c6565b9190910192915050565b600083516115368184602088016110c6565b83519083019061154a8183602088016110c6565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8082018082111561028c5761028c6113dd565b60008261161a57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761028c5761028c6113dd565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611669908301846110ea565b9695505050505050565b60006020828403121561168557600080fd5b81516110bf8161108c56fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220ad1c7c7f7ede0bab2b10e1a98344b39439a6484257ddea10901dc978b3453c1064736f6c63430008130033",
    "sourceMap": "215:1761:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:18;;;;;;:::i;:::-;;:::i;:::-;;;565:14:36;;558:22;540:41;;528:2;513:18;1570:300:18;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:36;;;1679:51;;1667:2;1652:18;3935:167:18;1533:203:36;3468:406:18;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:36;;;2836:2;2821:18;1929:204:18;2702:177:36;2633:102:18;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;874:348:33:-;;;;;;:::i;:::-;;:::i;707:161::-;;;:::i;1228:619::-;;;;;;:::i;:::-;;:::i;4388:162:18:-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:18;;-1:-1:-1;;;1707:40:18;;:104;;-1:-1:-1;;;;;;;1763:48:18;;-1:-1:-1;;;1763:48:18;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:26;;;1827:36:18;1688:175;1570:300;-1:-1:-1;;1570:300:18:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:18;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:18;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:18;:2;-1:-1:-1;;;;;3605:11:18;;3597:57;;;;-1:-1:-1;;;3597:57:18;;5363:2:36;3597:57:18;;;5345:21:36;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:36;;;5485:31;5533:19;;3597:57:18;;;;;;;;;719:10:24;-1:-1:-1;;;;;3686:21:18;;;;:62;;-1:-1:-1;3711:37:18;3728:5;719:10:24;4388:162:18;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:18;;5765:2:36;3665:170:18;;;5747:21:36;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:18;5563:425:36;3665:170:18;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:24;4804:7:18;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:18;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:18;;2324:56;;;;-1:-1:-1;;;2324:56:18;;6609:2:36;2324:56:18;;;6591:21:36;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:36;;;6660:54;6731:18;;2324:56:18;6407:348:36;1929:204:18;2001:7;-1:-1:-1;;;;;2028:19:18;;2020:73;;;;-1:-1:-1;;;2020:73:18;;6962:2:36;2020:73:18;;;6944:21:36;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:36;;;7084:39;7140:19;;2020:73:18;6760:405:36;2020:73:18;-1:-1:-1;;;;;;2110:16:18;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:24;4296:8:18;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:24;5352:7:18;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:18;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;874:348:33:-;929:39;948:10;960:7;929:18;:39::i;:::-;925:109;;990:33;;-1:-1:-1;;;990:33:33;;;;;;;;;;;925:109;1076:10;1048:24;;;:15;:24;;;;;;;;;:38;;;;;;;:::i;:::-;;1044:172;;1102:24;;;;:15;:24;;;;;:35;;-1:-1:-1;;1102:35:33;1129:8;1102:35;;;874:348::o;1044:172::-;1195:10;1168:24;;;:15;:24;;;;;:37;;-1:-1:-1;;1168:37:33;;;1044:172;874:348;:::o;707:161::-;744:37;754:10;766:14;;744:9;:37::i;:::-;807:14;;;825:10;791:31;;;:15;:31;;;;;:44;;-1:-1:-1;;791:44:33;;;845:16;;;807:14;845:16;;;:::i;:::-;;;;;;707:161::o;1228:619::-;1292:13;;1379:10;1351:24;;;;:15;:24;;;;;;;;;:38;;;;;;;:::i;:::-;;1348:162;;1415:18;1404:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:162;;;1482:16;1471:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:162;1929:38;;;;;;;;;;;;;;;;;1587:251;1661:6;:4;:6::i;:::-;1821:8;1633:202;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1633:202:33;;;;;;;;;;1616:220;;1633:202;1616:220;;:::i;:::-;;;;;;;;;;;;;1587:13;:251::i;:::-;1550:289;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1519:321;;;1228:619;;;:::o;4388:162:18:-;-1:-1:-1;;;;;4508:25:18;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:18;13313:53;;;;-1:-1:-1;;;13313:53:18;;6609:2:36;13313:53:18;;;6591:21:36;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:36;;;6660:54;6731:18;;13313:53:18;6407:348:36;12572:171:18;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:18;-1:-1:-1;;;;;12646:29:18;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:18;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:18;:7;-1:-1:-1;;;;;7570:16:18;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:18;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:18;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:18:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:18;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:18;;11346:81;;;;-1:-1:-1;;;11346:81:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:18;;11437:65;;;;-1:-1:-1;;;11437:65:18;;10333:2:36;11437:65:18;;;10315:21:36;10372:2;10352:18;;;10345:30;10411:34;10391:18;;;10384:62;-1:-1:-1;;;10462:18:36;;;10455:34;10506:19;;11437:65:18;10131:400:36;11437:65:18;11682:4;-1:-1:-1;;;;;11655:31:18;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:18;;11647:81;;;;-1:-1:-1;;;11647:81:18;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:18;;;;;;-1:-1:-1;;;;;12265:15:18;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:18;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:18;:5;-1:-1:-1;;;;;12990:17:18;;12982:55;;;;-1:-1:-1;;;12982:55:18;;10738:2:36;12982:55:18;;;10720:21:36;10777:2;10757:18;;;10750:30;10816:27;10796:18;;;10789:55;10861:18;;12982:55:18;10536:349:36;12982:55:18;-1:-1:-1;;;;;13047:25:18;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:18;;;;;;;;;;13108:41;;540::36;;;13108::18;;513:18:36;13108:41:18;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:18;;;;;;;:::i;7995:108::-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;505:3026:23:-;563:13;795:4;:11;810:1;795:16;791:31;;-1:-1:-1;;813:9:23;;;;;;;;;-1:-1:-1;813:9:23;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;1326:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:23;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:23;;505:3026;-1:-1:-1;;;;;505:3026:23:o;13925:831:18:-;14074:4;-1:-1:-1;;;;;14094:13:18;;1702:19:22;:23;14090:660:18;;14129:71;;-1:-1:-1;;;14129:71:18;;-1:-1:-1;;;;;14129:36:18;;;;;:71;;719:10:24;;14180:4:18;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:18;;;;;;;;-1:-1:-1;;14129:71:18;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:18;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:18;-1:-1:-1;;;14250:51:18;;-1:-1:-1;14243:58:18;;14090:660;-1:-1:-1;14735:4:18;13925:831;;;;;;:::o;8324:279::-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;-1:-1:-1;;;8446:150:18;;;;;;;:::i;8925:920::-;-1:-1:-1;;;;;9004:16:18;;8996:61;;;;-1:-1:-1;;;8996:61:18;;12784:2:36;8996:61:18;;;12766:21:36;;;12803:18;;;12796:30;12862:34;12842:18;;;12835:62;12914:18;;8996:61:18;12582:356:36;8996:61:18;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:18;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:18;;13145:2:36;9067:58:18;;;13127:21:36;13184:2;13164:18;;;13157:30;13223;13203:18;;;13196:58;13271:18;;9067:58:18;12943:352:36;9067:58:18;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:18;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:18;;13145:2:36;9271:58:18;;;13127:21:36;13184:2;13164:18;;;13157:30;13223;13203:18;;;13196:58;13271:18;;9271:58:18;12943:352:36;9271:58:18;-1:-1:-1;;;;;9671:13:18;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:18;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;14:131:36:-;-1:-1:-1;;;;;;88:32:36;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:36:o;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:36;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:36;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:36:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:36;;1348:180;-1:-1:-1;1348:180:36:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:36;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:36:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:36;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:36;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:127::-;7231:10;7226:3;7222:20;7219:1;7212:31;7262:4;7259:1;7252:15;7286:4;7283:1;7276:15;7302:127;7363:10;7358:3;7354:20;7351:1;7344:31;7394:4;7391:1;7384:15;7418:4;7415:1;7408:15;7434:135;7473:3;7494:17;;;7491:43;;7514:18;;:::i;:::-;-1:-1:-1;7561:1:36;7550:13;;7434:135::o;7574:1351::-;-1:-1:-1;;;8053:45:36;;8121:13;;8035:3;;8143:75;8121:13;8206:2;8197:12;;8190:4;8178:17;;8143:75;:::i;:::-;8282:66;8277:2;8237:16;;;8269:11;;;8262:87;8378:66;8373:2;8365:11;;8358:87;8474:66;8469:2;8461:11;;8454:87;8571:66;8565:3;8557:12;;8550:88;-1:-1:-1;;;8662:3:36;8654:12;;8647:39;8711:13;;8733:77;8711:13;8795:3;8787:12;;8780:4;8768:17;;8733:77;:::i;:::-;-1:-1:-1;;;8870:3:36;8829:17;;;;8862:12;;;8855:36;8915:3;8907:12;;7574:1351;-1:-1:-1;;;;7574:1351:36:o;8930:289::-;9061:3;9099:6;9093:13;9115:66;9174:6;9169:3;9162:4;9154:6;9150:17;9115:66;:::i;:::-;9197:16;;;;;8930:289;-1:-1:-1;;8930:289:36:o;9224:496::-;9403:3;9441:6;9435:13;9457:66;9516:6;9511:3;9504:4;9496:6;9492:17;9457:66;:::i;:::-;9586:13;;9545:16;;;;9608:70;9586:13;9545:16;9655:4;9643:17;;9608:70;:::i;:::-;9694:20;;9224:496;-1:-1:-1;;;;9224:496:36:o;9725:401::-;9927:2;9909:21;;;9966:2;9946:18;;;9939:30;10005:34;10000:2;9985:18;;9978:62;-1:-1:-1;;;10071:2:36;10056:18;;10049:35;10116:3;10101:19;;9725:401::o;10890:414::-;11092:2;11074:21;;;11131:2;11111:18;;;11104:30;11170:34;11165:2;11150:18;;11143:62;-1:-1:-1;;;11236:2:36;11221:18;;11214:48;11294:3;11279:19;;10890:414::o;11309:125::-;11374:9;;;11395:10;;;11392:36;;;11408:18;;:::i;11439:217::-;11479:1;11505;11495:132;;11549:10;11544:3;11540:20;11537:1;11530:31;11584:4;11581:1;11574:15;11612:4;11609:1;11602:15;11495:132;-1:-1:-1;11641:9:36;;11439:217::o;11661:168::-;11734:9;;;11765;;11782:15;;;11776:22;;11762:37;11752:71;;11803:18;;:::i;11834:489::-;-1:-1:-1;;;;;12103:15:36;;;12085:34;;12155:15;;12150:2;12135:18;;12128:43;12202:2;12187:18;;12180:34;;;12250:3;12245:2;12230:18;;12223:31;;;12028:4;;12271:46;;12297:19;;12289:6;12271:46;:::i;:::-;12263:54;11834:489;-1:-1:-1;;;;;;11834:489:36:o;12328:249::-;12397:6;12450:2;12438:9;12429:7;12425:23;12421:32;12418:52;;;12466:1;12463;12456:12;12418:52;12498:9;12492:16;12517:30;12541:5;12517:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "flipMood(uint256)": "c1a147a0",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintNft()": "c2229fea",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"sadSvg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"happySvg\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MoodNft__CantFlipMoonIfNotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"flipMood\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MoodNft.sol\":\"MoodNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/MoodNft.sol\":{\"keccak256\":\"0xe11042a0b95929f2341fccf8c479fe6a5566263897a3bf2ae3713b8d7bbdd62a\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://59ccb2e8f06fbd24e6adf52fd44549ed8421ffdf8703ae3b7fcbda880a0e3fe1\",\"dweb:/ipfs/QmUcinpCzUYyMR64fyA1zR1uTvEebbknf4CYu1Rxrf4m32\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "sadSvg",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "happySvg",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MoodNft__CantFlipMoonIfNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flipMood"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintNft"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/MoodNft.sol": "MoodNft"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/MoodNft.sol": {
        "keccak256": "0xe11042a0b95929f2341fccf8c479fe6a5566263897a3bf2ae3713b8d7bbdd62a",
        "urls": [
          "bzz-raw://59ccb2e8f06fbd24e6adf52fd44549ed8421ffdf8703ae3b7fcbda880a0e3fe1",
          "dweb:/ipfs/QmUcinpCzUYyMR64fyA1zR1uTvEebbknf4CYu1Rxrf4m32"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/MoodNft.sol",
    "id": 32443,
    "exportedSymbols": {
      "Base64": [
        30831
      ],
      "ERC721": [
        30293
      ],
      "MoodNft": [
        32442
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:1925:33",
    "nodes": [
      {
        "id": 32269,
        "nodeType": "PragmaDirective",
        "src": "51:24:33",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 32271,
        "nodeType": "ImportDirective",
        "src": "77:71:33",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32443,
        "sourceUnit": 30294,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32270,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30293,
              "src": "85:6:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32273,
        "nodeType": "ImportDirective",
        "src": "149:64:33",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "file": "@openzeppelin/contracts/utils/Base64.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32443,
        "sourceUnit": 30832,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32272,
              "name": "Base64",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30831,
              "src": "157:6:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32442,
        "nodeType": "ContractDefinition",
        "src": "215:1761:33",
        "nodes": [
          {
            "id": 32277,
            "nodeType": "ErrorDefinition",
            "src": "248:40:33",
            "nodes": [],
            "errorSelector": "19de95c7",
            "name": "MoodNft__CantFlipMoonIfNotOwner",
            "nameLocation": "254:31:33",
            "parameters": {
              "id": 32276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:2:33"
            }
          },
          {
            "id": 32279,
            "nodeType": "VariableDeclaration",
            "src": "294:30:33",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenCounter",
            "nameLocation": "310:14:33",
            "scope": 32442,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32278,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "294:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 32281,
            "nodeType": "VariableDeclaration",
            "src": "330:31:33",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_sadSvgImageUri",
            "nameLocation": "345:16:33",
            "scope": 32442,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 32280,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "330:6:33",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 32283,
            "nodeType": "VariableDeclaration",
            "src": "367:33:33",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_happySvgImageUri",
            "nameLocation": "382:18:33",
            "scope": 32442,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 32282,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "367:6:33",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 32286,
            "nodeType": "EnumDefinition",
            "src": "407:43:33",
            "nodes": [],
            "canonicalName": "MoodNft.Mood",
            "members": [
              {
                "id": 32284,
                "name": "HAPPY",
                "nameLocation": "426:5:33",
                "nodeType": "EnumValue",
                "src": "426:5:33"
              },
              {
                "id": 32285,
                "name": "SAD",
                "nameLocation": "441:3:33",
                "nodeType": "EnumValue",
                "src": "441:3:33"
              }
            ],
            "name": "Mood",
            "nameLocation": "412:4:33"
          },
          {
            "id": 32291,
            "nodeType": "VariableDeclaration",
            "src": "456:48:33",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenIdToMood",
            "nameLocation": "489:15:33",
            "scope": 32442,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$32286_$",
              "typeString": "mapping(uint256 => enum MoodNft.Mood)"
            },
            "typeName": {
              "id": 32290,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 32287,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "464:7:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "456:24:33",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$32286_$",
                "typeString": "mapping(uint256 => enum MoodNft.Mood)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32289,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32288,
                  "name": "Mood",
                  "nameLocations": [
                    "475:4:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32286,
                  "src": "475:4:33"
                },
                "referencedDeclaration": 32286,
                "src": "475:4:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Mood_$32286",
                  "typeString": "enum MoodNft.Mood"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 32315,
            "nodeType": "FunctionDefinition",
            "src": "511:190:33",
            "nodes": [],
            "body": {
              "id": 32314,
              "nodeType": "Block",
              "src": "592:109:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32302,
                      "name": "s_sadSvgImageUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32281,
                      "src": "602:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32303,
                      "name": "sadSvg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32293,
                      "src": "621:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "602:25:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 32305,
                  "nodeType": "ExpressionStatement",
                  "src": "602:25:33"
                },
                {
                  "expression": {
                    "id": 32308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32306,
                      "name": "s_happySvgImageUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32283,
                      "src": "637:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32307,
                      "name": "happySvg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32295,
                      "src": "658:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "637:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 32309,
                  "nodeType": "ExpressionStatement",
                  "src": "637:29:33"
                },
                {
                  "expression": {
                    "id": 32312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32310,
                      "name": "s_tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32279,
                      "src": "676:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 32311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "693:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "676:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32313,
                  "nodeType": "ExpressionStatement",
                  "src": "676:18:33"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6f6f64204e4654",
                    "id": 32298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "575:10:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_061f95ad754b8b2fc14caedf72a009801343f11d011419388184f383cc4c2b73",
                      "typeString": "literal_string \"Mood NFT\""
                    },
                    "value": "Mood NFT"
                  },
                  {
                    "hexValue": "4d4e",
                    "id": 32299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "587:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a58cf80943770dd084f078bec17346ccb44c1ca309c9db7e14b1781d30f61dc0",
                      "typeString": "literal_string \"MN\""
                    },
                    "value": "MN"
                  }
                ],
                "id": 32300,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32297,
                  "name": "ERC721",
                  "nameLocations": [
                    "568:6:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30293,
                  "src": "568:6:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "568:24:33"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32293,
                  "mutability": "mutable",
                  "name": "sadSvg",
                  "nameLocation": "537:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 32315,
                  "src": "523:20:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32292,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32295,
                  "mutability": "mutable",
                  "name": "happySvg",
                  "nameLocation": "559:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 32315,
                  "src": "545:22:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32294,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "522:46:33"
            },
            "returnParameters": {
              "id": 32301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:33"
            },
            "scope": 32442,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32335,
            "nodeType": "FunctionDefinition",
            "src": "707:161:33",
            "nodes": [],
            "body": {
              "id": 32334,
              "nodeType": "Block",
              "src": "734:134:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "754:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "758:6:33",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "754:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32321,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32279,
                        "src": "766:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32318,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29861,
                        29890
                      ],
                      "referencedDeclaration": 29861,
                      "src": "744:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:37:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32323,
                  "nodeType": "ExpressionStatement",
                  "src": "744:37:33"
                },
                {
                  "expression": {
                    "id": 32329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 32324,
                        "name": "s_tokenIdToMood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32291,
                        "src": "791:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$32286_$",
                          "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                        }
                      },
                      "id": 32326,
                      "indexExpression": {
                        "id": 32325,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32279,
                        "src": "807:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "791:31:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$32286",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 32327,
                        "name": "Mood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32286,
                        "src": "825:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Mood_$32286_$",
                          "typeString": "type(enum MoodNft.Mood)"
                        }
                      },
                      "id": 32328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "830:5:33",
                      "memberName": "HAPPY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32284,
                      "src": "825:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$32286",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "src": "791:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Mood_$32286",
                      "typeString": "enum MoodNft.Mood"
                    }
                  },
                  "id": 32330,
                  "nodeType": "ExpressionStatement",
                  "src": "791:44:33"
                },
                {
                  "expression": {
                    "id": 32332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "845:16:33",
                    "subExpression": {
                      "id": 32331,
                      "name": "s_tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32279,
                      "src": "845:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32333,
                  "nodeType": "ExpressionStatement",
                  "src": "845:16:33"
                }
              ]
            },
            "functionSelector": "c2229fea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNft",
            "nameLocation": "716:7:33",
            "parameters": {
              "id": 32316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:3:33"
            },
            "returnParameters": {
              "id": 32317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:0:33"
            },
            "scope": 32442,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32375,
            "nodeType": "FunctionDefinition",
            "src": "874:348:33",
            "nodes": [],
            "body": {
              "id": 32374,
              "nodeType": "Block",
              "src": "915:307:33",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 32345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "928:40:33",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 32341,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "948:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "952:6:33",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "948:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 32343,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32337,
                          "src": "960:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 32340,
                        "name": "_isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29846,
                        "src": "929:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 32344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "929:39:33",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32350,
                  "nodeType": "IfStatement",
                  "src": "925:109:33",
                  "trueBody": {
                    "id": 32349,
                    "nodeType": "Block",
                    "src": "969:65:33",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32346,
                            "name": "MoodNft__CantFlipMoonIfNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32277,
                            "src": "990:31:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "990:33:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32348,
                        "nodeType": "RevertStatement",
                        "src": "983:40:33"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Mood_$32286",
                      "typeString": "enum MoodNft.Mood"
                    },
                    "id": 32356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 32351,
                        "name": "s_tokenIdToMood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32291,
                        "src": "1048:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$32286_$",
                          "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                        }
                      },
                      "id": 32353,
                      "indexExpression": {
                        "id": 32352,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32337,
                        "src": "1064:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1048:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$32286",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 32354,
                        "name": "Mood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32286,
                        "src": "1076:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Mood_$32286_$",
                          "typeString": "type(enum MoodNft.Mood)"
                        }
                      },
                      "id": 32355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1081:5:33",
                      "memberName": "HAPPY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32284,
                      "src": "1076:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$32286",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "src": "1048:38:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 32372,
                    "nodeType": "Block",
                    "src": "1154:62:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 32370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 32365,
                              "name": "s_tokenIdToMood",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32291,
                              "src": "1168:15:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$32286_$",
                                "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                              }
                            },
                            "id": 32367,
                            "indexExpression": {
                              "id": 32366,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32337,
                              "src": "1184:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1168:24:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Mood_$32286",
                              "typeString": "enum MoodNft.Mood"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 32368,
                              "name": "Mood",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32286,
                              "src": "1195:4:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Mood_$32286_$",
                                "typeString": "type(enum MoodNft.Mood)"
                              }
                            },
                            "id": 32369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1200:5:33",
                            "memberName": "HAPPY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32284,
                            "src": "1195:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Mood_$32286",
                              "typeString": "enum MoodNft.Mood"
                            }
                          },
                          "src": "1168:37:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Mood_$32286",
                            "typeString": "enum MoodNft.Mood"
                          }
                        },
                        "id": 32371,
                        "nodeType": "ExpressionStatement",
                        "src": "1168:37:33"
                      }
                    ]
                  },
                  "id": 32373,
                  "nodeType": "IfStatement",
                  "src": "1044:172:33",
                  "trueBody": {
                    "id": 32364,
                    "nodeType": "Block",
                    "src": "1088:60:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 32362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 32357,
                              "name": "s_tokenIdToMood",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32291,
                              "src": "1102:15:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$32286_$",
                                "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                              }
                            },
                            "id": 32359,
                            "indexExpression": {
                              "id": 32358,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32337,
                              "src": "1118:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1102:24:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Mood_$32286",
                              "typeString": "enum MoodNft.Mood"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 32360,
                              "name": "Mood",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32286,
                              "src": "1129:4:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Mood_$32286_$",
                                "typeString": "type(enum MoodNft.Mood)"
                              }
                            },
                            "id": 32361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1134:3:33",
                            "memberName": "SAD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32285,
                            "src": "1129:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Mood_$32286",
                              "typeString": "enum MoodNft.Mood"
                            }
                          },
                          "src": "1102:35:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Mood_$32286",
                            "typeString": "enum MoodNft.Mood"
                          }
                        },
                        "id": 32363,
                        "nodeType": "ExpressionStatement",
                        "src": "1102:35:33"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c1a147a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flipMood",
            "nameLocation": "883:8:33",
            "parameters": {
              "id": 32338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32337,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "900:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 32375,
                  "src": "892:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:17:33"
            },
            "returnParameters": {
              "id": 32339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:33"
            },
            "scope": 32442,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32432,
            "nodeType": "FunctionDefinition",
            "src": "1228:619:33",
            "nodes": [],
            "body": {
              "id": 32431,
              "nodeType": "Block",
              "src": "1306:541:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32384,
                      "mutability": "mutable",
                      "name": "imageURI",
                      "nameLocation": "1330:8:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 32431,
                      "src": "1316:22:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 32383,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1316:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32385,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1316:22:33"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Mood_$32286",
                      "typeString": "enum MoodNft.Mood"
                    },
                    "id": 32391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 32386,
                        "name": "s_tokenIdToMood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32291,
                        "src": "1351:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_Mood_$32286_$",
                          "typeString": "mapping(uint256 => enum MoodNft.Mood)"
                        }
                      },
                      "id": 32388,
                      "indexExpression": {
                        "id": 32387,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32377,
                        "src": "1367:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1351:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$32286",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 32389,
                        "name": "Mood",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32286,
                        "src": "1379:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Mood_$32286_$",
                          "typeString": "type(enum MoodNft.Mood)"
                        }
                      },
                      "id": 32390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1384:5:33",
                      "memberName": "HAPPY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32284,
                      "src": "1379:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Mood_$32286",
                        "typeString": "enum MoodNft.Mood"
                      }
                    },
                    "src": "1351:38:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 32401,
                    "nodeType": "Block",
                    "src": "1457:53:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 32399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 32397,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32384,
                            "src": "1471:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 32398,
                            "name": "s_sadSvgImageUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32281,
                            "src": "1482:16:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "1471:27:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 32400,
                        "nodeType": "ExpressionStatement",
                        "src": "1471:27:33"
                      }
                    ]
                  },
                  "id": 32402,
                  "nodeType": "IfStatement",
                  "src": "1348:162:33",
                  "trueBody": {
                    "id": 32396,
                    "nodeType": "Block",
                    "src": "1390:54:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 32394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 32392,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32384,
                            "src": "1404:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 32393,
                            "name": "s_happySvgImageUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32283,
                            "src": "1415:18:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "1404:29:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 32395,
                        "nodeType": "ExpressionStatement",
                        "src": "1404:29:33"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 32407,
                              "name": "_baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                32441
                              ],
                              "referencedDeclaration": 32441,
                              "src": "1567:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 32408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1567:10:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "7b226e616d65223a2022",
                                            "id": 32418,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1647:12:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_a773e20fe2bdb77cb0a7501a4c05f8a017bb76d7a29840c69b1dbdd75ee042cc",
                                              "typeString": "literal_string \"{\"name\": \"\""
                                            },
                                            "value": "{\"name\": \""
                                          },
                                          {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 32419,
                                              "name": "name",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 29522,
                                              "src": "1661:4:33",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                                "typeString": "function () view returns (string memory)"
                                              }
                                            },
                                            "id": 32420,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1661:6:33",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          {
                                            "hexValue": "222c20226465736372697074696f6e22203a2022416e204e46542074686174207265666c6563747320746865206f776e657273206d6f6f642e22202c202261747472696275746573223a205b7b2274726169745f74797065223a20226d6f6f64696e657373222c202276616c756522203a203130307d5d2c2022696d616765223a2022",
                                            "id": 32421,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1677:133:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_306965a285a687e275ec57046a83c68ec509df2ec29860a52702fa98e14dcddb",
                                              "typeString": "literal_string \"\", \"description\" : \"An NFT that reflects the owners mood.\" , \"attributes\": [{\"trait_type\": \"moodiness\", \"value\" : 100}], \"image\": \"\""
                                            },
                                            "value": "\", \"description\" : \"An NFT that reflects the owners mood.\" , \"attributes\": [{\"trait_type\": \"moodiness\", \"value\" : 100}], \"image\": \""
                                          },
                                          {
                                            "id": 32422,
                                            "name": "imageURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 32384,
                                            "src": "1821:8:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          {
                                            "hexValue": "227d",
                                            "id": 32423,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1830:4:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                              "typeString": "literal_string \"\"}\""
                                            },
                                            "value": "\"}"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_a773e20fe2bdb77cb0a7501a4c05f8a017bb76d7a29840c69b1dbdd75ee042cc",
                                              "typeString": "literal_string \"{\"name\": \"\""
                                            },
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_306965a285a687e275ec57046a83c68ec509df2ec29860a52702fa98e14dcddb",
                                              "typeString": "literal_string \"\", \"description\" : \"An NFT that reflects the owners mood.\" , \"attributes\": [{\"trait_type\": \"moodiness\", \"value\" : 100}], \"image\": \"\""
                                            },
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                              "typeString": "literal_string \"\"}\""
                                            }
                                          ],
                                          "expression": {
                                            "id": 32416,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1633:6:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                              "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                              "id": 32415,
                                              "name": "string",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1633:6:33",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 32417,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1640:6:33",
                                          "memberName": "concat",
                                          "nodeType": "MemberAccess",
                                          "src": "1633:13:33",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                            "typeString": "function () pure returns (string memory)"
                                          }
                                        },
                                        "id": 32424,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1633:202:33",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 32413,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1616:3:33",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 32414,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1620:12:33",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1616:16:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 32425,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1616:220:33",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 32412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1610:5:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 32411,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1610:5:33",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 32426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1610:227:33",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 32409,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30831,
                                "src": "1587:6:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$30831_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 32410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1594:6:33",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30830,
                              "src": "1587:13:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 32427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1587:251:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 32405,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1550:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 32406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1554:12:33",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1550:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 32428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1550:289:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 32404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1534:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 32403,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1534:6:33",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 32429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:306:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 32382,
                  "id": 32430,
                  "nodeType": "Return",
                  "src": "1519:321:33"
                }
              ]
            },
            "baseFunctions": [
              29571
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1237:8:33",
            "overrides": {
              "id": 32379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1275:8:33"
            },
            "parameters": {
              "id": 32378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32377,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1254:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 32432,
                  "src": "1246:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:17:33"
            },
            "returnParameters": {
              "id": 32382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32381,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32432,
                  "src": "1292:13:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32380,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1291:15:33"
            },
            "scope": 32442,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32441,
            "nodeType": "FunctionDefinition",
            "src": "1853:121:33",
            "nodes": [],
            "body": {
              "id": 32440,
              "nodeType": "Block",
              "src": "1919:55:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                    "id": 32438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1936:31:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                      "typeString": "literal_string \"data:application/json;base64,\""
                    },
                    "value": "data:application/json;base64,"
                  },
                  "functionReturnParameters": 32437,
                  "id": 32439,
                  "nodeType": "Return",
                  "src": "1929:38:33"
                }
              ]
            },
            "baseFunctions": [
              29580
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1862:8:33",
            "overrides": {
              "id": 32434,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1887:8:33"
            },
            "parameters": {
              "id": 32433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1870:2:33"
            },
            "returnParameters": {
              "id": 32437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32436,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32441,
                  "src": "1905:13:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32435,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1904:15:33"
            },
            "scope": 32442,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32274,
              "name": "ERC721",
              "nameLocations": [
                "235:6:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30293,
              "src": "235:6:33"
            },
            "id": 32275,
            "nodeType": "InheritanceSpecifier",
            "src": "235:6:33"
          }
        ],
        "canonicalName": "MoodNft",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32442,
          30293,
          30454,
          30409,
          31106,
          31118,
          30853
        ],
        "name": "MoodNft",
        "nameLocation": "224:7:33",
        "scope": 32443,
        "usedErrors": [
          32277
        ]
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 33
}